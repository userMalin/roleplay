// BASIC INFORMATION
# heroId
To get on client side local player id, use heroId
Example:
local pos = getPlayerPosition(heroId);

# Generated items and mds id (both sides)
To get Item or Mds id use (instance has to be upper case!):
local item = Items.id("ITAR_PAL_H");
local mds = Mds.id("HUMANS_1HST2.MDS");

If Item or Mds didn't exist on list function will return -1

To get Item or Mds name by id use:
local item = Items.name(123);
local mds = Mds.name(87);

If Item or Mds didn't exist on list function will return null

// MULTIPLAYER CLASSES (cannot be constructed from scripts)
int ItemGround.id
string ItemGround.instance
int ItemGround.amount
string ItemGround.world
int ItemGround.virtualWorld
table {x, y, z} ItemGround.getPosition()

// SERVER FUNCTION
void sendMessageToAll(int r, int g, int b, string message)
void sendMessageToPlayer(int id, int r, int g, int b, string message)
void sendPlayerMessageToPlayer(int sender_id, int recv_id, int r, int g, int b, string message)
void sendPlayerMessageToAll(int id, int r, int g, int b, string message)
void addEvent(string eventName)
void removeEvent(string eventName)
void callEvent(string eventName, args...)
void addEventHandler(string eventName, function handler)
void cancelEvent()
void eventValue(int value)
string md5(string text)
string sha1(string text)
string sha256(string text)
string sha384(string text)
string sha512(string text)
float getDistance3d(float x1, float y1, float z1, float x2, float y2, float z2)
float getDistance2d(float x1, float y1, float x2, float y2)
float getVectorAngle(float x1, float y1, float x2, float y2)
void spawnPlayer(int id)
void unspawnPlayer(int id)
bool isPlayerConnected(int id)
bool isPlayerSpawned(int id)
bool isPlayerDead(int id)
bool isPlayerUnconscious(int id)
int getPlayerFocus(int id)
void setPlayerName(int id, string name)
string getPlayerName(int id)
void setPlayerColor(int id, int r, int g, int b)
table {r, g, b} getPlayerColor(int id)
void setPlayerPosition(int id, int x, int y, int z)
table {x, y, z} getPlayerPosition(int id)
void setPlayerAngle(int id, int angle)
float getPlayerAngle(int id)
void setPlayerHealth(int id, int hp)
int getPlayerHealth(int id)
void setPlayerMaxHealth(int id, int maxHp)
int getPlayerMaxHealth(int id)
void setPlayerWeaponMode(int id, int wm)
int getPlayerWeaponMode(int id)
void setPlayerStrength(int id, int str)
int getPlayerStrength(int id)
void setPlayerDexterity(int id, int dex)
int getPlayerDexterity(int id)
void setPlayerSkillWeapon(int id, int skill_id, int value)
int getPlayerSkillWeapon(int id)
void setPlayerTalent(int id, int talent_id, int value)
int getPlayerTalent(id)
void setPlayerVisual(int pid, string bodyModel, int bodyTxt, string headModel, int headTxt)
table {bodyModel, bodyTxt, headModel, headTxt} getPlayerVisual(int pid)
bool applyPlayerOverlay(int pid, int overlay)
bool removePlayerOverlay(int pid, int overlay)
void equipArmor(int id, int instance)
void unequipArmor(int id)
void equipMeleeWeapon(int id, int instance)
void unequipMeleeWeapon(int id)
void equipRangedWeapon(int id, int instance)
void unequipRangedWeapon(id)
void equipHelmet(int id, int instance)
void unequipHelmet(int id)
void equipShield(int id, int instance)
void unequipShield(int id)
void giveItem(int id, int instance, amount)
void removeItem(id, int instance, amount)
int getTickCount()
string getServerDescription()
void setServerDescription(string description)
string getServerWorld()
void setServerWorld(string world)
table {hour, min, day} getTime()
void setTime(int hour, int min[, int day])
int getMaxSlots()
int getPlayersCount()
int setTimer(function handler, int interval, int executeTimes)
void killTimer(int id)
void setTimerInterval(int id, int interval)
int getTimerInterval(int id)
void setTimerExecuteTimes(int id, int times)
int getTimerExecuteTimes(int id)
string rgbToHex(int r, int g, int b)
table {r, g, b} hexToRgb(string hex)
array sscanf(string format, string text)
string getPlayerIP(int pid)
string getPlayerSerial(int pid)
string getPlayerMacAddr(int pid)
void playAniId(int pid, int id)
void stopAni(int pid)
int getAniId(int pid)
int getPlayerArmor(int pid)
imt getPlayerMeleeWeapon(int pid)
int getPlayerRangedWeapon(int pid)
int getPlayerHelmet(int pid)
int getPlayerShield(int pid)
void setPlayerRespawnTime(int time)
int getPlayerRespawnTime()
void Packet.reset()
void Packet.send(int id, int reliability)
void Packet.sendToAll(int reliability)
void Packet.writeBool(bool value)
void Packet.writeChar(char value)
void Packet.writeInt8(int value)
void Packet.writeUInt8(int value)
void Packet.writeInt16(int value)
void Packet.writeUInt16(int value)
void Packet.writeInt32(int value)
void Packet.writeUInt32(int value)
void Packet.writeFloat(float value)
void Packet.writeString(string value)
bool Packet.readBool()
char Packet.readChar()
int Packet.readInt8()
int Packet.readUInt8()
int Packet.readInt16()
int Packet.readUInt16()
int Packet.readInt32()
int Packet.readUInt32()
float Packet.readFloat()
string Packet.readString()
string getPlayerWorld(int playerid)
void setPlayerWorld(int playerid, string world)
void equipItem(int playerid, string instance)
void unequipItem(int playerid, string instance)
int getPlayerPing(int pid)
void kick(int pid, string reason)
void ban(int pid, int minutes, string reason)
int getPlayerAniId(int pid)
int getPlayerVirtualWorld(int pid)
void setPlayerVirtualWorld(int pid, int virtualWorld)
ItemGround = ItemsGround.spawn(int item_id, int amount, float x, float y, float z, string world[, int virtualWorld])
ItemsGround.destroy(int ground_id)
ItemGround = ItemsGround.id(int ground_id)

// CLIENT FUNCTION
void addEvent(string eventName)
void removeEvent(string eventName)
void callEvent(string eventName, args...)
void addEventHandler(string eventName, function handler)
void cancelEvent()
void eventValue(int value)
int setTimer(function handler, int interval, int executeTimes)
void killTimer(int id)
void setTimerInterval(int id, int interval)
int getTimerInterval(int id)
void setTimerExecuteTimes(int id, int times)
int getTimerExecuteTimes(int id)
string rgbToHex(int r, int g, int b)
table {r, g, b} hexToRgb(string hex)
array sscanf(string format, string text)
bool chatInputIsOpen()
void chatInputOpen()
void chatInputClose()
void chatInputClear()
void chatInputSend()
void chatInputSetText(string text)
string chatInputGetText()
void chatInputSetPosition(int x, int y)
table {x, y} chatInputGetPosition()
void exitGame()
int getFpsRate()
table {x, y} getResolution()
void enableKeys(bool toggle)
bool isKeysEnabled()
void enableHud(int type, bool toggle)
bool isHudEnabled(int type)
void setTime(hour, min[, day])
table {hour, min, day} getTime()
void disableKey(int key, bool toggle)
bool isKeyDisabled(int key)
bool isKeyPressed(int key)
char getKeyLetter(int key)
void setSightFactor(float factor)
float getSightFactor()
void setBarPosition(int type, int x, int y)
table {x, y} getBarPosition(int type)
void setBarSize(int type, int width, int height)
table {width, height} getBarSize()
void enableEvent_Render(bool toggle)
void enableEvent_RenderFocus(bool toggle)
void setFreeze(bool toggle)
bool isFrozen()
void openInventory()
void closeInventory()
int anx(int virtToPx)
int any(int virtToPx)
int nax(int pxToVirt)
int nay(int pxToVirt)
int getPlayerPing(int id)
string getPlayerName(int id)
void setPlayerName(int id, string name)
table {r, g, b} getPlayerColor(int id)
void setPlayerColor(int id, int r, int g, int b)
int getPlayerType(int id)
bool isPlayerCreated(int id)
bool isPlayerStreamed(int id)
bool isPlayerDead(int id)
bool isPlayerUnconscious(int id)
void setPlayerPosition(int id, float x, float y, float z)
table {x, y, z} getPlayerPosition(int id)
void setPlayerAngle(int id, float angle)
float getPlayerAngle(int id)
void setPlayerCollision(int id, bool toggle)
bool getPlayerCollision(int id)
bool equipArmor(int id, int instance)
void unequipArmor(int id)
bool equipMeleeWeapon(int id, int instance)
void unequipMeleeWeapon(int id)
bool equipRangedWeapon(int id, int instance)
void unequipRangedWeapon(int id)
bool equipHelmet(int id, int instance)
void unequipHelmet(int id)
bool equipShield(int id, int instance)
void unequipShield(int id)
void setPlayerVisual(int pid, string bodyModel, int bodyTxt, string headModel, int headTxt)
table {bodyModel, bodyTxt, headModel, headTxt} getPlayerVisual(int pid)
void setPlayerFatness(int pid, float fatness)
float getPlayerFatness(int pid)
int getPlayerHealth(int pid)
void setPlayerHealth(int pid, int health)
int getPlayerMaxHealth(int pid)
void setPlayerMaxHealth(int pid, int health)
int getPlayerWeaponMode(int pid)
void setPlayerWeaponMode(int pid, int weaponMode)
string getPlayerAni(int pid)
int getPlayerAniId(int pid)
void playAniId(int pid, int id)
void playAni(int pid, string name)
void stopAni(int pid)
bool hitPlayer(int killerid, int playerid)
int getPlayerArmor(int pid)
int getPlayerMeleeWeapon(int pid)
int getPlayerRangedWeapon(int pid)
int getPlayerHelmet(int pid)
int getPlayerShield(int pid)
void setPlayerSkillWeapon(int pid, int skill, int percent)
void getPlayerSkillWeapon(int pid, int skill)
bool isInventoryOpen()
bool hasItem(string instance)
table {instance, amount, name} getItemBySlot(int slot)
array [table {instance, amount, name}] getEq()
void setCursorVisible(bool toggle)
bool isCursorVisible()
void setCursorSensitivity(float factor)
float getCursorSensitivity()
void setCursorTxt(string texture)
string getCursorTxt()
void setCursorPosition(int x, int y)
void setCursorPositionPx(int x, int y)
table {x, y} getCursorPosition()
table {x, y} getCursorPositionPx()
bool isMouseBtnPressed(int button)
void setKeyLayout(int langId) 0 - EN | 1 - PL | 2 - RU | 3 - DE
int getKeyLayout()
void Packet.reset()
void Packet.send(int reliability)
void Packet.writeBool(bool value)
void Packet.writeChar(char value)
void Packet.writeInt8(int value)
void Packet.writeUInt8(int value)
void Packet.writeInt16(int value)
void Packet.writeUInt16(int value)
void Packet.writeInt32(int value)
void Packet.writeUInt32(int value)
void Packet.writeFloat(float value)
void Packet.writeString(string value)
bool Packet.readBool()
char Packet.readChar()
int Packet.readInt8()
int Packet.readUInt8()
int Packet.readInt16()
int Packet.readUInt16()
int Packet.readInt32()
int Packet.readUInt32()
float Packet.readFloat()
string Packet.readString()
void clearInventory()
void changeWorld(string world)
void disableControls(bool toggle)
bool isControlsDisabled()
void playGesticulation(int pid)
void setLevel(int lvl)
int getLevel()
void setExp(int exp)
int getExp()
void setNextLevelExp(int exp)
int getNextLevelExp()
void setLearnPoints(int lp)
int getLearnPoints()
void textSetFont(string font)
int textWidth(string text)
int textWidthPx(string text)
int letterWidth(char letter)
int letterWidthPx(char letter)
int letterDistance()
int letterDistancePx()
int getPlayerPing(int pid)
int createNpc(name)
bool spawnNpc(id)
bool unspawnNpc(id)
bool destroyNpc(id)
int getTickCount()
void showPlayerStatus(bool toggle)
string getWorld()
int getPlayerDexterity(int pid)
void setPlayerDexterity(int pid, int dex)
int getPlayerStrength(int pid)
void setPlayerStrength(int pid, int str)
table {x, y, z} getPlayerScale(int pid)
void setPlayerScale(int pid)
string getPlayerInstance(int pid)
void setPlayerInstance(int pid, string instance)
void enable_NicknameId(bool toggle)
void setPlayerOnFloor(int pid)
Vob(userpointer addres)
Vob(string instance)
Vob.collision = true/false (Property)
table {x, y, z} Vob.getPosition()
table {x, y, z} Vob.getRotation()
void Vob.setPosition(float x, float y, float z)
void Vob.setRotation(float x, float y, float z)
string Vob.getVisual()
void Vob.setVisual(string instance)
void Vob.floor()
Mob(userpointer addres)
Mob(string instance)
Mob.collision = bool (Property)
Mob.name = string (Property)
table {x, y, z} Mob.getPosition()
table {x, y, z} Mob.getRotation()
void Mob.setPosition(float x, float y, float z)
void Mob.setRotation(float x, float y, float z)
string Mob.getVisual()
void Mob.setVisual(string instance)
void Mob.floor()
MobInter(userpointer addres)
MobInter(string instance)
MobInter.collision = bool (Property)
MobInter.name = string (Property)
table {x, y, z} MobInter.getPosition()
table {x, y, z} MobInter.getRotation()
void MobInter.setPosition(float x, float y, float z)
void MobInter.setRotation(float x, float y, float z)
string MobInter.getVisual()
void MobInter.setVisual(string instance)
void MobInter.floor()
MobLockable(userpointer addres)
MobLockable(string instance)
MobLockable.collision = bool (Property)
MobLockable.name = string (Property)
MobLockable.locked = bool (Property)
table {x, y, z} MobLockable.getPosition()
table {x, y, z} MobLockable.getRotation()
void MobLockable.setPosition(float x, float y, float z)
void MobLockable.setRotation(float x, float y, float z)
string MobLockable.getVisual()
void MobLockable.setVisual(string instance)
void MobLockable.floor()
float getDistance3d(float x1, float y1, float z1, float x2, float y2, float z2)
float getDistance2d(float x1, float z1, float x2, float z2)
float getVectorAngle(float x1, float z1, float x2, float z2)
string md5(string text)
string fileMd5(string filePath)
string sha1(string text)
string sha256(string text)
string sha384(string text)
string sha512(string text)
void enable_DamageAnims(toggle)
table {packetReceived, packetlossTotal, packetlossLastSecond, messagesInResendBuffer, messageInSendBuffer, bytesInResendBuffer, bytesInSendBuffer} getNetworkStats()
string getHostname()
Draw(int x, int y, string text)
bool Draw.visible
string Draw.text
string Draw.font
int Draw.width
int Draw.widthPx
int Draw.height
int Draw.heightPx
void Draw.top()
void Draw.setColor(int r, int g, int b)
table {r, g, b} Draw.getColor()
void Draw.setAlpha(int alpha)
int Draw.getAlpha()
void Draw.setPosition(int x, int y)
void Draw.setPositionPx(int x, int y)
table {x, y} Draw.getPosition()
table {x, y} Draw.getPositionPx()
Draw3d(float x, float y, float z)
bool Draw3d.visible
string Draw3d.font
void Draw3d.top()
void Draw3d.setColor(int r, int g, int b)
table {r, g, b} Draw3d.getColor()
void Draw3d.setAlpha(int alpha)
int Draw3d.getAlpha()
void Draw3d.insertText(string text)
void Draw3d.removeText(int position)
void Draw3d.updateText(int position, string text)
string Draw3d.getText()
void Draw3d.setWorldPosition(float x, float y, float z)
table {x, y, z} Draw3d.getWorldPosition()
Texture(int x, int y, int width, int height, string filename)
bool Texture.visible
string Texture.file
void Texture.top()
void Texture.setColor(int r, int g, int b)
table {r, g, b} Texture.getColor()
void Texture.setAlpha(int alpha)
int Texture.getAlpha()
void Texture.setPosition(int x, int y)
void Texture.setPositionPx(int x, int y)
table {x, y} Texture.getPosition()
table {x, y} Texture.getPositionPx()
void Texture.setSize(int width, int height)
void Texture.setSizePx(int width, int height)
table {width, height} Texture.getSize()
table {width, height} Texture.getSizePx()
void Texture.setRect(int x, int y, int widht, int height)
void Texture.setRectPx(int x, int y, int widht, int height)
table {width, height} Texture.getRect()
table {width, height} Texture.getRectPx()
bool isConsoleOpen()
int getPingLimit()
void setPingLimit(int ping)

Sound(string filename)
int Sound.playingTime (as msec)
float Sound.volume [0, 1]
bool Sound.looping
float Sound.balance [-1, 1]
void Sound.play()
void Sound.stop()

Sound3d(string filename)
int Sound3d.playingTime (as msec)
float Sound3d.volume [0, 1]
bool Sound3d.looping
float Sound3d.balance [-1, 1]
float Sound3d.obstruction
int Sound3d.radius
float Sound3d.coneAngle
float Sound3d.reverbLevel
bool Sound3d.ambient
float Sound3d.pitchOffset
void Sound3d.play()
void Sound3d.stop()
void Sound3d.setTargetVob(Vob vob)
void Sound3d.setTargetPlayer(int id)

// SERVER EVENTS
onInit()
onPacket(int id, Packet packet);
onPlayerCommand(int id, string cmd, string params)
onPlayerMessage(int id, string message)
onPlayerJoin(int id)
onPlayerDisconnect(int id, int reason)
onPlayerChangeHealth(int id, int oldHp, int currHp)
onPlayerChangeMaxHealth(int id, int oldMaxHp, int currMaxHp)
onPlayerRespawn(int id)
onPlayerDead(int id, int killer_id)
onPlayerUnconscious(int id, int killer_id)
onPlayerHit(int id, int killer_id, int dmg, int type)
onPlayerChangeWeaponMode(int pid, int oldWm, int currWm)
onPlayerChangeFocus(int pid, int oldFocusId, int currFocusId)
onPlayerChangeColor(int pid, int r, int g, int b)
onPlayerEquipArmor(int pid, string instance)
onPlayerEquipHelmet(int pid, string instance)
onPlayerEquipMeleeWeapon(int pid, string instance)
onPlayerEquipRangedWeapon(int pid, string instance)
onPlayerEquipShield(int pid, string instance)
onPlayerEquipHandItem(int pid, int hand, string instance)
onPlayerEnterWorld(int pid)
onPlayerChangeWorld(int pid, string world)
onPlayerDropItem(int pid, ItemGround)
onPlayerTakeItem(int pid, ItemGround)

// CLIENT EVENTS
onInit()
onPacket(Packet packet);
onRender()
onRenderFocus(int vobType, int id, int x, int y, string name)
onCommand(string cmd, string params)
onKey(int key)
onPlayerHit(int killerid, int playerid, int dmg)
onPlayerDead(int playerid)
onDamage(int dmg, int dmgType)
onEquip(string instance)
onUnequip(string instance)
onOpenInventory()
onCloseInventory()
onSink()
onPlayerCreate(int id)
onPlayerDestroy(int id)
onPlayerSpawn(int id)
onPlayerUnspawn(int id)
onPlayerMessage(int id, int r, int g, int b, string message)
onMouseClick(int button)
onMouseRelease(int button)
onMouseWheel(int value)
onRespawn()
onFocus(int focusId, int oldFocusId)
onTakeItem(string instance, int amount)
onDropItem(string instance, int amount)
onUseItem(string instance, int amount, int hand)
onChangeResolution()
onWorldChange(string world)
onWorldEnter()
onPlayerChangeNickname(int pid, string name)
onPlayerChangeColor(int pid, int r, int g, int b)
onPlayerChangePing(int pid, int ping)

// SHARED
int queue.len()
bool queue.empty()
element queue.front()
element queue.back()
void queue.push(element)
void queue.pop()
element queue[index] operator
